while nc -v -l 4000 > $(date +output-%s) ; do sleep 0.01; done
telnet localhost 4000
telnet towel.blinkenlights.nl
lolcat
echo "Hello"|cowsay
cowsay -f beavis.zen Hello
http://caca.zoy.org/wiki/toilet

$ nc -v www.climagic.org 80
Connection to www.climagic.org 80 port [tcp/http] succeeded!
GET / HTTP/1.1
Host: www.climagic.org
User-Agent: climagic

# Pushing 5Gbps over an 1Gbps network:
 [client]$ tar cvf - dir/|lz4c |netcat server 12345
 [server]$ netcat -l -p 12345|lz4 -d -|tar xv

$ echo '{"name": "app_01", "output": "could not connect to mysql", "status": 1}' > /dev/tcp/localhost/3030
$ echo '{"name": "app_01", "output": "could not connect to mysql", "status": 1}' | nc localhost 3030

* The following command will create a TCP socket server listening on port 6000.

NOTE: netcat will output messages that it receives in the terminal window. This command will need to be run in a separate terminal window.

 $ nc -l -k -4 -p 6000

To test the netcat TCP socket server, run the following command and observe the netcat output (testing).

 $ echo "testing" | nc localhost 6000

 # -k  Forces nc to stay listening for another connection after its current
 #+ connection is completed. It is an error to use this option without the -l
 #+ option.
 # -l  Used to specify that nc should listen for an incoming connection rather
 #+ than initiate a connection to a remote host. It is an error to use this
 #+ option in conjunction with the -p, -s, or -z options.  Additionally, any
 #+ timeouts specified with the -w option are ignored.
 # -4  Forces nc to use IPv4 addresses only.
 # -p source_port  Specifies the source port nc should use, subject to
 #+ privilege restrictions and availability.

